#
# This file is managed by Chef.
# Do NOT modify this file directly.

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Anything you add to the SOLR_OPTS variable will be included in the java
# start command line as-is, in ADDITION to other options. If you specify the
# -a option on start script, those options will be appended as well.
SOLR_OPTS="$SOLR_OPTS
<% if node['solrcloud']['zk_run'] -%>
-DzkRun
<% end -%>
<% if node['solrcloud']['hdfs']['enable'] && node['solrcloud']['hdfs']['hdfs_home'] -%>
-Dsolr.directoryFactory=<%= node['solrcloud']['hdfs']['directory_factory'] %>
-Dsolr.lock.type=<%= node['solrcloud']['hdfs']['lock_type'] %>
-Dsolr.hdfs.home=<%= node['solrcloud']['hdfs']['hdfs_home'] %>
<% end -%>
<% if node['solrcloud']['enable_jmx'] -%>
-Dcom.sun.management.jmxremote
-Dcom.sun.management.jmxremote.local.only=false
-Dcom.sun.management.jmxremote.ssl=false
-Dcom.sun.management.jmxremote.authenticate=<%= node['solrcloud']['jmx']['authenticate'] %>
<% password_file = node['solrcloud']['jmx']['password_file'] % { install_dir: node['solrcloud']['install_dir'] } -%>
-Dcom.sun.management.jmxremote.password.file=<%= password_file %>
<% access_file = node['solrcloud']['jmx']['access_file'] % { install_dir: node['solrcloud']['install_dir'] } -%>
-Dcom.sun.management.jmxremote.access.file=<%= access_file %>
-Djava.rmi.server.hostname=<%= node['solrcloud']['solr_config']['solr_host'] %>
<% end -%>
<%= node['solrcloud']['java_options'].join(" \n") %>
"

# By default the script will use JAVA_HOME to determine which java
# to use, but you can set a specific path for Solr to use without
# affecting other Java applications on your server/workstation.
#SOLR_JAVA_HOME=""

# Increase Java Heap as needed to support your indexing / query needs
# SOLR_HEAP="512m"

# Expert: If you want finer control over memory options, specify them directly
# Comment out SOLR_HEAP if you are using this though, that takes precedence
SOLR_JAVA_MEM="-Xms<%= @java_xms %> -Xmx<%= @java_xmx %>"

# Set the ZooKeeper connection string if using an external ZooKeeper ensemble
# e.g. host1:2181,host2:2181/chroot
# Leave empty if not using SolrCloud
<% zk_hosts = if node['solrcloud']['zk_run']
                ["#{node['ipaddress']}:#{node['solrcloud']['zk_run_port']}"]
              else
                node['solrcloud']['solr_config']['solrcloud']['zk_host']
              end -%>
<% unless node['solrcloud']['zk_run'] -%>
ZK_HOST="<%= zk_hosts.sort.uniq.join(',') %><%= node['solrcloud']['solr_config']['solrcloud']['zk_chroot'] %>"
<% end -%>

# Set the ZooKeeper client timeout (for SolrCloud mode)
ZK_CLIENT_TIMEOUT="<%= node['solrcloud']['solr_config']['solrcloud']['zk_client_timeout'] %>"

# Enable verbose GC logging
GC_LOG_OPTS="<%= node['solrcloud']['solr_config']['gc_log_opts'].sort.join(" \n") %>"

# These GC settings have shown to work well for a number of common Solr workloads
GC_TUNE="<%= node['solrcloud']['solr_config']['gc_tune'].sort.join(" \n") %>"

# Set to true to activate the JMX RMI connector to allow remote JMX client applications
# to monitor the JVM hosting Solr; set to "false" to disable that behavior
# (false is recommended in production environments)
ENABLE_REMOTE_JMX_OPTS="<%= boolean_string(node['solrcloud']['enable_jmx']) %>"

# The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here
RMI_PORT=<%= node['solrcloud']['jmx']['port'] %>

# By default the start script uses "localhost"; override the hostname here
# for production SolrCloud environments to control the hostname exposed to cluster state
<% solr_host = node['solrcloud']['solr_config']['solr_host'] -%>
<% solr_host = node[node['solrcloud']['solr_config']['solr_host_type']] if solr_host.nil? || solr_host.empty? -%>
<% solr_host = node['ip'] if solr_host.nil? || solr_host.empty? -%>
SOLR_HOST="<%= solr_host || "localhost" %>"

# By default the start script uses UTC; override the timezone if needed
SOLR_TIMEZONE="<%= node['solrcloud']['solr_config']['solr_timezone'] %>"

# Location where the bin/solr script will save PID files for running instances
# If not set, the script will create PID files in $SOLR_TIP/bin
SOLR_PID_DIR=<%= node['solrcloud']['pid_dir'] %>

# Path to a directory where Solr creates index files, the specified directory
# must contain a solr.xml; by default, Solr will use server/solr
<% solr_home = node.solrcloud.solr_home % { install_dir: node.solrcloud.install_dir } -%>
SOLR_HOME=<%= solr_home %>

# Solr provides a default Log4J configuration properties file in server/resources
# however, you may want to customize the log settings and file appender location
# so you can point the script to use a different log4j.properties file
LOG4J_PROPS=<%= ::File.join(node['solrcloud']['install_dir'], 'resources', 'log4j.properties') %>

# Location where Solr should write logs to; should agree with the file appender
# settings in server/resources/log4j.properties
SOLR_LOGS_DIR=<%= node['solrcloud']['log_dir'] %>

# Sets the port Solr binds to, default is 8983
SOLR_PORT=<%= node['solrcloud']['port'] %>

# TODO:
# Uncomment to set SSL-related system properties
# Be sure to update the paths to the correct keystore for your environment
#SOLR_SSL_KEY_STORE=etc/solr-ssl.keystore.jks
#SOLR_SSL_KEY_STORE_PASSWORD=secret
#SOLR_SSL_TRUST_STORE=etc/solr-ssl.keystore.jks
#SOLR_SSL_TRUST_STORE_PASSWORD=secret
#SOLR_SSL_NEED_CLIENT_AUTH=false
#SOLR_SSL_WANT_CLIENT_AUTH=false

# Uncomment if you want to override previously defined SSL values for HTTP client
# otherwise keep them commented and the above values will automatically be set for HTTP clients
#SOLR_SSL_CLIENT_KEY_STORE=
#SOLR_SSL_CLIENT_KEY_STORE_PASSWORD=
#SOLR_SSL_CLIENT_TRUST_STORE=
#SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD=

# Settings for authentication
#SOLR_AUTHENTICATION_CLIENT_CONFIGURER=
#SOLR_AUTHENTICATION_OPTS=
